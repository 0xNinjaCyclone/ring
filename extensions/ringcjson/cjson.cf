<ignorecpointertype>

<code>
/* Copyright (c) 2022 Mahmoud Fayed <msfclipper@yahoo.com> */

#include "lib/cJSON.h"
</code>

<constant>
CJSON_VERSION_MAJOR
CJSON_VERSION_MINOR
CJSON_VERSION_PATCH
cJSON_Invalid
cJSON_False
cJSON_True
cJSON_NULL
cJSON_Number
cJSON_String
cJSON_Array
cJSON_Object
cJSON_Raw
cJSON_IsReference
cJSON_StringIsConst
CJSON_NESTING_LIMIT
</constant>

<struct>
</struct>

<runcode>
aNumberTypes + "size_t"
aNumberTypes + "char"
</runcode>


const char *cJSON_Version(void)
void cJSON_InitHooks(cJSON_Hooks *hooks)

cJSON *cJSON_Parse(const char *value)
cJSON *cJSON_ParseWithLength(const char *value, size_t buffer_length)

cJSON *cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)
cJSON *cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)

char *cJSON_Print(const cJSON *item)
char *cJSON_PrintUnformatted(const cJSON *item)
char *cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)
cJSON_bool cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)
void cJSON_Delete(cJSON *item)


