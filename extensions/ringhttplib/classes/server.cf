<class>
name: Server
para: void
</class>

bool listen(const char *host, int port)
bool listen@2(const char *host, int port, int socket_flags)

void set_tcp_nodelay(bool on)
void set_address_family(int family)

<comment>
  Server &set_expect_100_continue_handler(Expect100ContinueHandler handler);
  Server &set_logger(Logger logger);
  Server &set_socket_options(SocketOptions socket_options);
  Server &set_default_headers(Headers headers);
</comment>

void set_keep_alive_max_count(size_t count)
void set_keep_alive_timeout(time_t sec)

void set_read_timeout(time_t sec)
void set_read_timeout@2(time_t sec, time_t usec)

void set_write_timeout(time_t sec)
void set_write_timeout@2(time_t sec, time_t usec)

void set_idle_interval(time_t sec)
void set_idle_interval@2(time_t sec, time_t usec)

void set_payload_max_length(size_t length)

bool bind_to_port(const char *host, int port)
bool bind_to_port@2(const char *host, int port, int socket_flags)
int bind_to_any_port(const char *host)
int bind_to_any_port@2(const char *host, int socket_flags)
bool listen_after_bind(void)

bool is_running(void)
void stop(void)
