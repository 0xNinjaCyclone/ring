.. index:: 
	single: What is new in Ring 1.18; Introduction

========================
What is new in Ring 1.18
========================

In this chapter we will learn about the changes and new features in Ring 1.18 release.

.. index:: 
	pair: What is new in Ring 1.18?; List of changes and new features

List of changes and new features
================================

Ring 1.18 comes with the next features!

* Read Files application
* Random User application
* Better CitPre application
* More Samples
* Syntax Files 
* The Power Operator
* Using References 
* Ring for MS-DOS
* Better RingSockets
* Heroku (Better support)
* Better WebLib
* Better Ring API
* Better Documentation
* More Improvements

.. index:: 
	pair: What is new in Ring  1.18; Read Files application

Read Files application
======================

Using this application we can display text/binary files using Hexadecimal

.. image:: readfiles.png
	:alt: readfiles

.. index:: 
	pair: What is new in Ring  1.18; Random User application

Random User application
=======================

A simple application as an example about using GUILib, InternetLib & JSONLib

.. image:: user_male.png
	:alt: randomuser

.. image:: user_female.png
	:alt: randomuser

.. index:: 
	pair: What is new in Ring  1.18; Better CitPre application

Better CitPre application
=========================

In Ring 1.18 the Citations Prediction application is updated

(1) The application comes with 500 samples

(2) Journal Paper (HTML): https://www.hindawi.com/journals/bmri/2022/2239152/

(3) Journal Paper (PDF): https://downloads.hindawi.com/journals/bmri/2022/2239152.pdf

.. image:: citationsdataset.png
	:alt: citationsdataset

.. index:: 
	pair: What is new in Ring  1.18; More Samples

More Samples
============

* Added: samples/General/OrbitalMechanics
* Added: samples/General/QuizMarks/QuizMarks.ring
* Added: samples/UsingQt/TabActivate/simpleExample.ring 
* Added: samples/UsingQt/TabActivate/TabActivateController.ring 
* Added: samples/UsingFormDesigner/centerwindow
* Added: samples/AQuickStart/MySQL/mysql11.ring
* Added: samples/UsingQt3D/ex19_sceneKeyboard.ring
* Added: samples/General/SmallExamples/Conjecture/knuthconjecture.ring
* File: samples/AQuickStart/GUILib/gui44.ring - Better Code
* File: samples/UsingWebLib/Demo/datalib.ring - Better Code
* File: samples/UsingWebLib/Demo/bootstrap.ring - Better Code
* File: samples/UsingStbImage/test2.ring - Better Code
* Folder: samples/UsingLibSDL - Better Code

.. image:: lagrange.png
	:alt: lagrange

.. index:: 
	pair: What is new in Ring  1.18; Syntax Files

Syntax Files
============

Ring 1.18 provide another step towards better syntax flexibility

* Support running source code files with any extension 

* Automatic loading for (ringsyntax.ring) file that exist in the current folder

For example in the the next screen shot

We have (ringsyntax.ring) that translate some of the Ring keywords to Arabic language

When we execute (سلام.رينج) which means in english (hello.ring)

Ring will automatically execute (ringsyntax.ring) using Load Syntax command

Each Folder in the program could have it's optional (ringsyntax.ring) file

We can mix styles in the same project 

.. image:: autoloadsyntax.png
	:alt: autoloadsyntax

.. index:: 
	pair: What is new in Ring  1.18; The Power Operator

The Power Operator
==================

Ring 1.18 Support (**) and (^^) as the power operator

Example:

.. code-block:: Ring

	? 3**4			# 81.00		
	? 3^^4			# 81.00    
	? 256^^(1/4)		# 4        
	? 3.4^^4.5		# 246.41   
	? 256^^(1/3)		# 6.35     
	? 129.6^^(1/5)		# 2.65     
	? 5.9736*(10^^6)	# 5973600.00 
	? 7.3476*(10^^(-5))	# 0.0000734760


.. index:: 
	pair: What is new in Ring  1.18; Using References

Using References
================

Ring as a language is designed to reduce references usage

The assignment operator (=) copy lists/objects by value

This release comes with the next functions to create and use managed references

.. code-block:: none

	ref(aList|oObject) 	 ---> aList|oObject (Reference)	# Short name
	reference(aList|oObject) ---> aList|oObject (Reference)	# Long name
	refcount(variable) ---> Number (References Count)

Example:

.. code-block:: ring

	aList = [ 10,20,30, ref(aList) ]	# Circular Reference
	? aList[4][1] 				# Print 10
	? aList[4][4][4][4][4][2]		# Print 20
	? refcount(aList)			# Print 2

Check the chapter (Using References) to learn more about using this feature!

.. index:: 
	pair: What is new in Ring  1.18; Ring for MS-DOS

Ring for MS-DOS
===============

Starting from Ring 1.18, We can build Ring Compiler/VM on MS-DOS

Tested using 

* Watcom C 386 9.01 (1992)
* Borland C 3.1 (1992)
* DOSBox-x 0.83.22 (2022)
* DOSBox 0.74

.. tip:: We use Watcom C 386 as our formal compiler on this platform

.. note:: Ring uses DOS/4GW (32-bit DOS extender) to eliminate the 640 KB conventional memory limit

.. image:: ringfordos.png
	:alt: ringfordos

.. index:: 
	pair: What is new in Ring  1.18; Better RingSockets

Better RingSockets
==================

The next functions are added to the extension

* inet_pton()
* inet_ntop()
* socketsCleanup()

.. index:: 
	pair: What is new in Ring  1.18; Heroku (Better support)

Heroku (Better support)
=======================

In Ring 1.18 We updated the packages to use a modern Ring version

The project is tested using Heroku-22 (Ubuntu 22.04)

URL: https://github.com/ring-lang/RingWebAppOnHeroku

.. index:: 
	pair: What is new in Ring  1.18; Better WebLib

Better WebLib
=============

(1) HTTP Post - Better Code

(2) Application Class - More Methods:
	* Redirect()
	* NoJavaScript()

(3) Application Class - Attributes for JavaScript Libraries 
	* cJSJQueryPath
	* cJSBootstrapPath
	* cCSSBootstrapPath
	* lNoJavaScript

(4) Page Class - More Methods:
	* theadStart(aOptions)
	* theadEnd()
	* tbodyStart(aOptions)
	* tbodyEnd()
	* tfootStart(aOptions)
	* tfootEnd() 

(5) WebPage Class - Support (THead, TBody & TFoot)

.. index:: 
	pair: What is new in Ring  1.18; Better Ring API

Better Ring API
===============

* Added: RING_API_GETFLOATPOINTER(nParameter)
* Added: RING_API_ACCEPTFLOATVALUE(nParameter)
* Added: RING_API_GETCHARPOINTER(nParameter)
* RING_API_GETINTPOINTER - Better code when passing integer pointer
* RING_API_ISLIST - Don't accept empty strings (NULL) from Ring code
* Sample: extensions/tutorial/integerpointer
* Sample: extensions/tutorial/stringpointer

Example (C Code):

.. code-block:: C

	#include "ring.h"
	#include "stdlib.h"
	
	void changeValue(char *var)
	{
		strcpy(var,"Hello from C Code");
	}
	
	RING_FUNC(ring_changevalue)
	{
	
		if (RING_API_PARACOUNT != 1)
		{
			RING_API_ERROR(RING_API_BADPARACOUNT);
			return;
		}
	
		if (!RING_API_ISSTRING(1))
		{
			RING_API_ERROR(RING_API_BADPARATYPE);
			return;
		}
	
		char *p1 = RING_API_GETCHARPOINTER(1);
		changeValue(p1);
	
	}
	
	RING_LIBINIT
	{
		RING_API_REGISTER("changevalue",ring_changevalue);
	}

Example (Ring Code):

.. code-block:: Ring

	? "Loading Library"
	loadlib("mylib.dll")
	
	cString = space(100)
	changevalue(:cString)
	? cString

Output:

.. code-block:: none

	Loading Library
	Hello from C Code


.. index:: 
	pair: What is new in Ring  1.18; Better Documentation

Better Documentation
====================

The next chapters are improved!

(1) Building RingQt applications for Mobile
(2) Building RingQt applications for WebAssembly
(3) How to compile Ring from source code?

.. index:: 
	pair: What is new in Ring  1.18; More Improvements

More Improvements
=================

* Ring Notepad: New option to build GUI application using Ring2EXE
* Ring Notepad: Output Window - Correct cursor position while using unicode 
* Ring Notepad: Set the default font when opening the Font dialog
* Ring Notepad: Preserve editing history after text insertion
* FindInFiles Application: Better Code (Check Read() function output)
* GetQuotesHistory Application: Better Style
* Chess/Checkers Games: Looks more nice on small screen resolutions
* StdLib - Tree Class - Use the ref() function
* RingAllegro: Use Allegro 5.2.8 instead of Allegro 5.2.7.1
* RingSQLite: Use SQLite 3.39.2.
* RingHTTPLib: Use cpp-httplib 0.10.9
* RingZip: Use zip 0.2.4 
* RingCJSON: Update the version 
* RingQt: Set the environment variable QT_QPA_PLATFORM_PLUGIN_PATH
* RingQt: Use Qt 5.15.2 instead of Qt 5.15.0
* RingQt: QMediaPlayer Class - Remove currentNetworkConfiguration() Method
* Ring2EXE: Better code when distributing GUI applications
* Ring Functions - SetEnv()/UnSetEnv() - Better Code
* Ring Functions - Print()/Puts() - Better Code
* Ring Compiler/VM Source Code - Better File Names
* Ring Compiler/VM Source Code - Define RING_MSDOS
* Ring Compiler/VM Source Code - Many structures updated to use unsigned int/char
* Ring Compiler/VM Source Code - Added: vmerror.c, vmeval.c & vmthreads.c
* Support building Ring on windows using Tiny C Compiler
* Ring Object File - Better support for classes that exist inside packages
* Ring Compiler - Support larger number of function/method parameters
* Ring Compiler - ring_parser_epsilon() function - Better Code
* Ring Compiler - Support running source code files with any extension 
* Ring VM - Memory Functions - Display the size when the memory allocation fail
* Ring VM - Support calling private methods from the class region
* Ring VM - Better code when loading the VM instructions (Uses less memory)
* Ring VM - Fixed count for ByteCode items for the ICO_FUNC instruction
* Ring VM - Better code for dynamic change between function/method calls inside braces
* Ring VM - Check string range when we access strings after calling functions directly
* Ring VM - Get pointer as string when we access the pointer address
* Ring VM - Don't create more than one temp. list per VM instruction
* Ring VM - Using RING_VM_IR_GETLINENUMBER & RING_VM_IR_SETLINENUMBER(x)
* Ring VM - The default RING_POOLMANAGER_ITEMSIZE value is 40 (instead of 64)
* Ring VM - The default RING_POOLMANAGER_ITEMSINBLOCK value is 500K (instead of 2M)
* Ring VM - Max. parameters for each VM instruction is three (3)
* Ring VM - New instruction: ICO_EXTRAPARA (For instructions that need more parameters)
* Ring VM - Delete the Intermediate Code list after having the Byte Code
* Ring VM - Better format when displaying the Byte Code
* Ring VM - Faster code when creating new threads
* Ring VM - Better numbers format when printing lists and objects
* Ring VM - Memory defragmentation before Byte Code execution
* Ring VM - Range Operator - return list reference instead of a copy
* Ring VM - Pointer2Object() function - return list/object reference instead of a copy
* Ring VM - Ref()/Reference() function - Return a safe (managed) reference for a List/Object
* Ring VM - RefCount() function - Return references count for List/Object
* Ring VM - ObjectID() function - Support Lists too
* Ring VM - Increase the Stack size to 1K
* Ring VM - Error System - Display recursion depth
* Ring VM - ICO_FREESTACK instruction - Don't delete temp. lists in global scope
* Ring VM - ICO_FREETEMPLISTS instruction - Delete temp. lists in global scope (Thread Safe)
* Ring VM - List Functions - Using (unsigned int) for the list index & size