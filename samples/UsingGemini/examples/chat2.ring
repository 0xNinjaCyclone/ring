#================================================#
# This code is generated by Gemini (AI)
# Questions by Fayed
#================================================#

load "guilib.ring"

# Define messages and colors for each month
messages = [
    "January: New beginnings! Time to set goals and plan for the year ahead.",
    "February: Shortest month, but full of love! Celebrate Valentine's Day.",
    "March: Spring is here! Time for new growth and fresh beginnings.",
    "April: Showers bring May flowers! Enjoy the blooming scenery and warm weather.",
    "May: Time for graduations, Mother's Day, and outdoor adventures!",
    "June: Summer is here! Enjoy vacations, beaches, and sunshine.",
    "July: Fourth of July celebrations! Time for cookouts and fireworks.",
    "August: Back-to-school preparations begin. Enjoy the last days of summer.",
    "September: Autumn arrives! Time for cozy sweaters and pumpkin spice lattes.",
    "October: Halloween celebrations! Get ready for costumes, candy, and spooky fun.",
    "November: Thanksgiving is here! Celebrate with family and friends.",
    "December: Holiday season! Time for gift-giving, decorating, and spreading cheer."
]


months = ["January", "February", "March", "April", "May", "June",
          "July", "August", "September", "October", "November", "December"]


colors = [
    "#c0c0c0", "#ff0000", "#00ff00", # ... (colors for each month)
    "#ffff00", "#ff00ff", "#0000ff",
    "#00ffff", "#ff9900", "#ff6699",
    "#9900ff", "#ffcc00", "#c2c2f0"
]

# Create the application and window
oApp = new qApp
win1 = new qWidget()

# Set window title and size
win1.setwindowtitle("Month Messages")
win1.setGeometry(100, 100, 400, 300)

# Grid layout for buttons
layout = new qVBoxLayout()

# Button creation and event handling
for i = 1 to len(messages)
  # Create button with month name and message as tooltip
  btn = new qPushButton(win1)
  btn.settext(months[i])
  btn.settooltip(messages[i])

  # Set background color based on index
  btn.setStyleSheet("background-color: " + colors[i] + ";")

  # Connect click event to display corresponding message
  btn.setclickevent("showMessage(" + (i) + ")")

  # Add button to the layout
  layout.addWidget(btn)
end

win1.setLayout(layout)
win1.show()
oApp.exec()

# Function to display message based on button index
func showMessage(index)
  # Display message in a dialog
  msginfo("Month Message", messages[index])