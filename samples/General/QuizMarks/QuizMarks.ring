#==============================================================#
# Application: Quiz Marks
# Author     : Mahmoud Fayed
# Date       : 2023-01-29
#==============================================================#
# We have a Quiz that contains 100 questions (True/False)
# Input: 
# 	(1) The correct answer (aCorrect)
# 	(2) Also, We provide the Students answer (aStudents)
# Output: 
# 	(1) Student Score  (of 100)
#	(2) Students Marks (of 10)
#	(3) Detect the Wrong Answers 
#	(4) CSV File contains the results
#==============================================================#

load "csvlib.ring"

F = "False"
T = "True"

aCorrect = [
	F,F,F,T,T,F,T,T,F,
	F,F,T,
	F,T,F,F,F,
	T,F,F,F,T,T,
	T,F,T,F,T,F,
	F,T,F,T,F,T,
	F,T,T,F,F,T,
	F,F,F,
	F,F,F,
	F,T,T,F,T,T,F,F,T,
	T,F,T,
	T,T,F,
	F,T,F,
	F,F,F,
	T,F,F,
	F,F,T,
	F,T,F,
	F,T,F,
	T,T,T,
	F,T,F,
	T,F,T,T,T,T,
	T,F,T,
	T,F,F,T,F
]

C_QUESTIONSCOUNT = len(aCorrect)

aStudents = [
	[ "111101288", 
		[
			F,T,F,T,F,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,T,T,F,F,F,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,F,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,F,F,
			F,F,F,
			F,T,F,
			F,T,T,F,T,T,
			T,F,T,
			T,F,F,T,F
		] 
	],
	[
		"222100831",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,F,T,
			F,T,F,
			T,F,F,F,F,F,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101280",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,F,F,F,T,F,F,F,T,
			T,T,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			T,T,F,
			T,F,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			F,F,F,F,F
		]
	],
	[
		"222101023",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222100662",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,T,T,F,F,F,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F			
		]
	],
	[
		"222100781",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101240",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			T,F,T,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,F,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222100820",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,F,F
		]
	],
	[
		"222101928",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101171",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			T,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"111102174",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,F,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			T,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F			
		]
	],
	[
		"222106549",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101207",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,F,F,F,T,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			T,T,T,
			T,T,T,
			T,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			T,T,T,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,F,T,
			F,T,F,
			F,T,T,F,T,T,
			F,F,T,
			T,F,F,T,F
		]
	],
	[
		"222105590",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,F,F,F,T,F,F,F,T,
			T,F,T,
			T,T,F,
			F,F,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			T,T,F,
			F,T,F,
			F,T,F,
			T,F,F,T,T,T,
			T,F,T,
			F,F,F,T,F			
		]
	],
	[
		"222102874",
		[
			F,T,F,T,T,F,F,T,F,
			F,T,F,
			F,F,T,T,T,
			F,T,F,F,F,T,
			T,T,F,F,T,T,
			T,T,F,T,T,T,
			F,T,T,F,T,T,
			T,F,F,
			T,T,T,
			F,T,T,T,T,T,F,F,F,
			F,F,T,
			T,T,F,
			T,T,F,
			T,F,F,
			F,F,T,
			F,F,T,
			F,F,F,
			F,T,T,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			F,F,T,
			T,T,T,T,T
		]
	],
	[
		"222100096",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,F,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222102375",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222102064",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,	
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F			
		]
	],
	[
		"222101018",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,F,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222100675",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101149",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F			
		]
	],
	[
		"222102173",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101712",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			T,F,F,F,T,F,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,F,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101150",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"111102251",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,T,
			F,F,T,
			F,T,F,
			T,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"333103958",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			T,T,T,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			T,T,T,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F			
		]
	],
	[
		"222100861",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			T,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"111100242",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,F,F,
			T,F,F,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,T,
			T,T,T,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,F,T,T,
			T,F,T,
			T,F,F,T,F
		]
	],
	[
		"222101381",
		[
			F,F,F,T,T,F,T,T,F,
			F,F,T,
			F,T,F,F,F,
			T,F,F,F,T,T,
			T,F,T,F,T,F,
			F,T,F,T,F,T,
			F,T,T,F,F,T,
			F,F,F,
			F,F,F,
			F,T,T,F,T,T,F,F,T,
			T,F,T,
			T,T,F,
			F,T,F,
			F,F,F,
			T,F,F,
			F,F,T,
			F,T,F,
			F,T,F,
			F,T,F,
			F,T,F,
			T,F,T,T,T,T,
			T,F,T,
			T,F,F,T,F
		]
	]
]

line()
? " Students  Count : " + len(aStudents)
? " Questions Count : " + C_QUESTIONSCOUNT
line()
aMarks = [["Student ID","Wrong Answers","Score of 100","Marks of 10"]]
for student in aStudents
	aMark = [student[1]]
	See " " + student[1] + " - ( " 
	aAnswer = student[2]
	nSum = 0
	cWrong = ""
	for t=1 to C_QUESTIONSCOUNT
		if aAnswer[t] = aCorrect[t]
			nSum++
		else 
			see "Q" + t + " "
			cWrong += "Q" + t + " "
		ok
	next
	aMark + cWrong
	cScore = "" + nSum + " of " + len(aAnswer)
	aMark + cScore
	nMark = (nSum/10)
	aMark + nMark
	? ") - " + cScore + " - " + nMark + " of 10 "
	aMarks + aMark
next
line()
write("marks.csv",list2csv(aMarks))

func line
	? copy("=",70)